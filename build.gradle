plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.team19'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // WebFlux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Spring Web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // Spring Data JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // Spring Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // Sprig Batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'

    // Lombok
    compileOnly 'org.projectlombok:lombok'

    // Database
    runtimeOnly 'com.mysql:mysql-connector-j' // MySQL (운영용)
    runtimeOnly 'com.h2database:h2' // H2 (개발용)

    // JJWT (JWT 라이브러리)
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.batch:spring-batch-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
